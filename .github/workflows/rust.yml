name: Rust

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  build:
    strategy:
      matrix:
        os: ["ubuntu-latest"]
        rust_channel: ["stable", "beta", "nightly"]
        include:
          - rust_channel: "stable"
            os: "macOS-latest"
    runs-on: ${{matrix.os}}
    steps:
    - uses: actions/checkout@v2
      with:
        submodules: true
    - name: Install rust channel
      run: |
        rustup install ${{matrix.rust_channel}}
        rustup default ${{matrix.rust_channel}}
    - name: Test debug
      run: cargo test --verbose --features all
    - name: Test release
      run: cargo test --verbose --features all --release

  features:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          submodules: true
      - run: cargo build --no-default-features --features read
      - run: cargo build --no-default-features --features write
      - run: cargo build --no-default-features --features read_core,write_core,coff
      - run: cargo build --no-default-features --features read_core,write_core,elf
      - run: cargo build --no-default-features --features read_core,write_core,macho
      - run: cargo build --no-default-features --features read_core,pe
      - run: cargo build --no-default-features --features read_core,wasm
      - run: cargo build --no-default-features --features doc

  msrv-read:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          submodules: true
      - name: Install rust
        run: rustup update 1.42.0 && rustup default 1.42.0
      - name: Test
        run: cargo test --verbose --no-default-features --features read,std

  msrv-all:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          submodules: true
      - name: Install rust
        run: rustup update 1.56.1 && rustup default 1.56.1
      - name: Test
        run: cargo test --verbose --features all

  rustfmt:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Install rust
        run: |
          rustup install stable
          rustup default stable
          rustup component add rustfmt
      - run: cargo fmt --all -- --check

  coverage:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          submodules: true
      - name: Install rust
        run: |
          rustup install stable
          rustup default stable
      - name: Run cargo-tarpaulin
        uses: actions-rs/tarpaulin@v0.1
        with:
          args: '--features all --ignore-tests --out Lcov'
      - name: Upload to Coveralls
        uses: coverallsapp/github-action@master
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          path-to-lcov: './lcov.info'

  doc:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - run: cargo doc --no-default-features --features doc
